<snippet>
	<content><![CDATA[
#include <bits/stdc++.h>

using namespace std;

#define int long long
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define fastIO() ios_base::sync_with_stdio(false);cin.tie(NULL)
#define YES cout<<"Yes\n"
#define NO cout<<"No\n"
#define F first
#define S second
#define pb push_back

template<typename T>
istream& operator>>(istream&is, vector<T> &arr) {
  for(auto &it : arr) is >> it;
  return is;
}

template<typename T>
ostream& operator<<(ostream&os, vector<T> &arr) {
  for(auto &it : arr) {
    os << it << " ";
  }
  return os;
}

$0

void RepSolution() {
	int t; cin >> t;
	while(t--) sol();
}

signed main() {
	cout << fixed << setprecision(15);
	fastIO();
	#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    freopen("error.txt", "w", stderr);
  #endif
	$1
	return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>cpp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
